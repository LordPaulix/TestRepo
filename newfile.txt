def buildResults = [:]
pipeline {
   agent {
        node {
            label "${slaveName}"
        }
    }
       //any
   stages {
        stage('Setting up...') {
            steps {
                script {
                    def psOutPut = powershell(returnStdout: true , script: ''' 
                    Add-Type -AssemblyName System.Windows.Forms
                    Add-Type -AssemblyName System.Drawing
                   
                    $FileBrowser = New-Object System.Windows.Forms.OpenFileDialog -Property @{ 
                        InitialDirectory = [Environment]::GetFolderPath('Desktop') 
                        Filter = 'SpreadSheet (*.xlsx)|*.xlsx'
                        Title = 'Select test design file'
                    }
                    
                    $form = New-Object System.Windows.Forms.Form
                    $form.Text = 'Data Entry Form'
                    $form.Size = New-Object System.Drawing.Size(300,200)
                    $form.StartPosition = 'CenterScreen'
                    
                    $OKButton = New-Object System.Windows.Forms.Button
                    $OKButton.Location = New-Object System.Drawing.Point(75,120)
                    $OKButton.Size = New-Object System.Drawing.Size(75,23)
                    $OKButton.Text = 'OK'
                    $OKButton.DialogResult = [System.Windows.Forms.DialogResult]::OK
                    $form.AcceptButton = $OKButton
                    $form.Controls.Add($OKButton)
                    
                    $CancelButton = New-Object System.Windows.Forms.Button
                    $CancelButton.Location = New-Object System.Drawing.Point(150,120)
                    $CancelButton.Size = New-Object System.Drawing.Size(75,23)
                    $CancelButton.Text = 'Cancel'
                    $CancelButton.DialogResult = [System.Windows.Forms.DialogResult]::Cancel
                    $form.CancelButton = $CancelButton
                    $form.Controls.Add($CancelButton)
                    
                    $label = New-Object System.Windows.Forms.Label
                    $label.Location = New-Object System.Drawing.Point(10,20)
                    $label.Size = New-Object System.Drawing.Size(280,20)
                    $label.Text = 'Please enter the information in the space below:'
                    $form.Controls.Add($label)
                    
                    $textBox = New-Object System.Windows.Forms.TextBox
                    $textBox.Location = New-Object System.Drawing.Point(10,40)
                    $textBox.Size = New-Object System.Drawing.Size(260,20)
                    $form.Controls.Add($textBox)
                    
                    $form.Topmost = $true
                    $form.Add_Shown({$FileBrowser.ShowDialog()})
                    $result = $FileBrowser.ShowDialog((New-Object System.Windows.Forms.Form -Property @{TopMost = $true }))
                    
                    $loop = $true
                    While($loop){
                        if ($result -eq "OK")
                        {
                            $loop = $false
                            $path = $FileBrowser.Filename
                            # Create initial log text file
                            # Testing if file-exist
                              if (Test-Path C:/work/Jenkins/automation-jenkins/Log.txt){
                              }else{
                              	New-Item C:/work/Jenkins/automation-jenkins/Log.txt
                              }
                                Set-Content C:/work/Jenkins/automation-jenkins/Log.txt "Tprj_Path:`t"
                                Add-Content C:/work/Jenkins/automation-jenkins/Log.txt "TestSheet_Filename:`t$path"
                                Add-Content C:/work/Jenkins/automation-jenkins/Log.txt "Error_Number:`t0"
                                Add-Content C:/work/Jenkins/automation-jenkins/Log.txt "Status:`t Starting"
                                Add-Content C:/work/Jenkins/automation-jenkins/Log.txt "Spider Version:`t"
                                Add-Content C:/work/Jenkins/automation-jenkins/Log.txt "Spider Log Text:`t"
                                Add-Content C:/work/Jenkins/automation-jenkins/Log.txt "Error##_Fix:`t"
                                return
                        else
                            $FileBrowser.Dispose()
                            $form.Dispose()
                            return
                        }
                    }
                    $FileBrowser.Dispose()
                    $form.Dispose()
                ''')
                }
            }
        }
        stage('Initializing...'){
            steps {
                build job: '_jenkins_Main', quietPeriod: 1
                //build job: '_jenkins_Build', quietPeriod: 1
            }
        }
        stage('Setting Startup..'){
            steps {
                build job: '_jenkins_StartUpAddress', quietPeriod: 1
                //build job: '_jenkins_Build', quietPeriod: 1
            }
        }
        stage('Detecting PL..'){
            steps {
                build job: '_jenkins_PLError', quietPeriod: 1
            }
        }
        stage('Setting Comment Result..'){
            steps {
                build job: '_jenkins_CommentResultError', quietPeriod: 1
            }
        }
        // Checking and Applying Pre-run countermeasure
        stage('Pre-run countermeasure...'){
            parallel{
                stage('jenkins_CPUEmergencyError'){
                    steps {
                        build job: '_jenkins_CPUEmergencyError', quietPeriod: 1
                    }
                }
                stage('jenkins_AssemblerError'){
                    steps {
                        build job: '_jenkins_AssemblerError', quietPeriod: 1
                    }
                }
                stage('jenkins_PragmaError'){
                    steps {
                        build job: '_jenkins_PragmaError', quietPeriod: 1
                    }
                }
            }
        }
        // Building software
        stage('Run...'){
            steps {
                build job: '_jenkins_Main', quietPeriod: 1
                //build job: '_jenkins_Build', quietPeriod: 1
            }
        }
        stage('applying jnknsByteError countermeasure...'){
            steps {
                build job: '_jenkins_ByteError', quietPeriod: 100
            }
        }
        stage('applying jnknsAmbiguousError countermeasure...'){
            steps {
                build job: '_jenkins_AmbiguousError', quietPeriod: 1
            }
        }
    }
    post {
        always {
            echo "Build results: ${buildResults.toString()}"
        }
        success {
            echo "All builds completed OK"
        }
        failure {
            echo "A job failed"
        }
    }
}
